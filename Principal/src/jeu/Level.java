package jeu;
public class Level {
	String editedfile,path;
	savedpath sp;
	//x = 6; y = 6; z = 6
	
	Byte[] level1 = { 
			
			0x3,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x2,
			
	};
	
	Byte[] level2 = { 
			
			0x3,0x1,0x1,0x1,0x1,0x1,
			0x0,0x0,0x0,0x0,0x0,0x1,
			0x1,0x1,0x1,0x1,0x1,0x1,
			0x1,0x0,0x0,0x0,0x0,0x0,
			0x1,0x0,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x0,0x0,0x2	
			
	};
	
	Byte[] level3 = { 
			//1er Ã©tage
			0x3,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x1,
			0x1,0x1,0x1,0x1,0x1,0x2,
			//2Ã©me Ã©tage
			0x1,0x1,0x1,0x1,0x1,0x0,
			0x1,0x1,0x1,0x1,0x1,0x0,
			0x1,0x1,0x1,0x1,0x1,0x0,
			0x1,0x1,0x1,0x1,0x1,0x0,
			0x1,0x1,0x1,0x1,0x1,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			//etc
			0x1,0x1,0x1,0x1,0x0,0x0,
			0x1,0x1,0x1,0x1,0x0,0x0,
			0x1,0x1,0x1,0x1,0x0,0x0,
			0x1,0x1,0x1,0x1,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			
			0x1,0x1,0x1,0x0,0x0,0x0,
			0x1,0x1,0x1,0x0,0x0,0x0,
			0x1,0x1,0x1,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
	
			0x1,0x1,0x0,0x0,0x0,0x0,
			0x1,0x1,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			
			0x3,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0,
			0x0,0x0,0x0,0x0,0x0,0x0
	};
	
	boolean solvable;
	Byte difficulty;
	Level(){
		
	}
	
	public int getX(int niv){
		switch (niv){
		case 1:
			return 6;
		case 2:
			return 6;
		case 3:
			return 6;
		default : 
			return 6;
		}
	}
	
	public int getY(int niv){
		switch (niv){
		case 1:
			return 6;
		case 2:
			return 6;
		case 3:
			return 6;
		default : 
			return 6;
		}
	}

	public int getZ(int niv){
		switch (niv){
		case 1:
			return 1;
		case 2:
			return 1;
		case 3:
			return 6;
		default : 
			return 1;
		}
	}
	
	
	// Fonction qui retourne le "byte" correspondant au bloc voulu
		public Byte niveau(int niv,int numbloc){
			switch (niv){
			case 1:
				return level1[numbloc];
			case 2:
				return level2[numbloc];
			case 3 :
				return level3[numbloc];
			default :
				return level1[numbloc];
			}
		}
	
	// Fonction qui retourne si oui ou non la case est une case d'arrivée (de sortie)	
		public boolean arrivee(int niv, int numbloc){
			switch (niv){
			case 1:
				if (numbloc == 35) 
					return true;
				else
					return false;
			case 2:
				if (numbloc == 35) 
					return true;
				else
					return false;
			case 3:
				if (numbloc == 35) 
					return true;
				else
					return false;
			default: 
					return false;
			}
		}

}
